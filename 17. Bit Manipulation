{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPsCd7QxJoGaRpHBQ/MZMMg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#NeetCode 150"],"metadata":{"id":"L6o4sF1AcXWX"}},{"cell_type":"markdown","source":["##***17. Bit Manipulation (7 Questions)***"],"metadata":{"id":"gr0MIyvLcv7A"}},{"cell_type":"markdown","source":["***1. Single Number (Easy)***\n","\n","https://leetcode.com/problems/single-number/"],"metadata":{"id":"DZmyjE-ndF3v"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"wEvD2gXtcT7q"},"outputs":[],"source":["from typing import List\n","\n","class Solution:\n","  def singleNumber(self, nums: List[int]) -> int:\n","    res = 0\n","    for n in nums:\n","      res = n ^ res # XOR (return true if both inputs are different)\n","    return res"]},{"cell_type":"markdown","source":["***2. Number of 1 Bits (Easy)***\n","\n","https://leetcode.com/problems/number-of-1-bits/"],"metadata":{"id":"wzQybX-cFbfU"}},{"cell_type":"code","source":["class Solution:\n","  def hammingWeight(self, n: int) -> int:\n","    res = 0\n","\n","    while n:\n","      res += n % 2\n","      n = n >> 1\n","    return res"],"metadata":{"id":"bC9LpUVEFqNk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Solution:\n","  def hammingWeight(self, n: int) -> int:\n","    res = 0\n","\n","    while n:\n","      n &= (n - 1)\n","      res += 1\n","    return res"],"metadata":{"id":"O4vllCXLkv3E"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["***3. Counting Bits (Easy)***\n","\n","https://leetcode.com/problems/counting-bits/\n"],"metadata":{"id":"CSko3PsVNhGu"}},{"cell_type":"code","source":["class Solution:\n","  def countBits(self, n: int) -> int:\n","    dp = [0] * (n + 1)\n","    offset = 1\n","\n","    for i in range(1, n + 1):\n","      if offset * 2 == i:\n","        offset = i\n","      dp[i] = 1 + dp[i - offset]\n","\n","    return dp"],"metadata":{"id":"YQoUPxY5Njhd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["***4. Reverse Bits (Easy)***\n","\n","https://leetcode.com/problems/reverse-bits/\n"],"metadata":{"id":"sSOfe_GvNj4F"}},{"cell_type":"code","source":["class Solution:\n","  def reverseBits(self, n: int) -> int:\n","    res = 0\n","\n","    for i in range(32):\n","      bit = (n >> i) & 1\n","      res = res | (bit << (31 - i))\n","    return res"],"metadata":{"id":"o4Gnzto2NnV0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["***5. Missing Number (Easy)***\n","\n","https://leetcode.com/problems/missing-number/"],"metadata":{"id":"XQLbAAn9Nnud"}},{"cell_type":"code","source":["from typing import List\n","\n","class Solution:\n","  def missingNumber(self, nums: List[int]) -> int:\n","    res = len(nums)\n","\n","    for i in range(len(nums)):\n","      res += (i - nums[i])\n","\n","    return res"],"metadata":{"id":"vVOUCZ49NprT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["***6. Sum of Two Integer (Medium)***\n","\n","https://leetcode.com/problems/sum-of-two-integers/\n"],"metadata":{"id":"QlLjvcU5NqhM"}},{"cell_type":"code","source":["def get_sum(a, b):\n","  # Iterate until there is no carry\n","  while b != 0:\n","    # Carry now contains common set bits of a and b\n","    carry = a & b\n","\n","    # Sum of bits of a and b where at least one of the bits is not set\n","    a = a ^ b\n","\n","    # Carry is shifted by one so that adding it to a gives the required sum\n","    b = carry << 1\n","\n","  return a\n","\n","# Example usage:\n","print(get_sum(1, 2))  # Output: 3\n","print(get_sum(2, 3))  # Output: 5"],"metadata":{"id":"K4-EiXdLNsUM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713902997460,"user_tz":420,"elapsed":193,"user":{"displayName":"SOE WUNNA","userId":"03037672760754318381"}},"outputId":"c8faf4cb-808b-4a46-8bc5-ab9a8c32c8c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","5\n"]}]},{"cell_type":"markdown","source":["***7. Reverse Integer (Medium)***\n","\n","https://leetcode.com/problems/reverse-integer/"],"metadata":{"id":"VaEnY6DZNswl"}},{"cell_type":"code","source":["class Solution:\n","  def reverse(self, x: int) -> int:\n","    # Integer.MAX_VALUE = 2147483647 (end with 7)\n","    # Integer.MIN_VALUE = -2147483648 (end with -8 )\n","\n","    MIN = -2147483648  # -2^31,\n","    MAX = 2147483647  #  2^31 - 1\n","\n","    res = 0\n","    while x:\n","      digit = int(math.fmod(x, 10))  # (python dumb) -1 %  10 = 9\n","      x = int(x / 10)  # (python dumb) -1 // 10 = -1\n","\n","      if res > MAX // 10 or (res == MAX // 10 and digit > MAX % 10):\n","        return 0\n","      if res < MIN // 10 or (res == MIN // 10 and digit < MIN % 10):\n","        return 0\n","      res = (res * 10) + digit\n","\n","    return res"],"metadata":{"id":"AVDy3O1wNtms"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Solution:\n","  def reverse(self, x: int) -> int:\n","    MIN = -2147483648\n","    MAX = 2147483647\n","    res = 0\n","\n","    if x < 0:\n","      str_x = str(x)[1:] # exclude - symbol\n","      reversed = str_x[::-1]\n","      res = -1 * int(reversed)\n","\n","    else:\n","      str_x = str(x)\n","      reversed = str_x[::-1]\n","      res = int(reversed)\n","\n","    return res if MIN < res < MAX else 0"],"metadata":{"id":"89QvLxtQAPdq","executionInfo":{"status":"ok","timestamp":1713910543893,"user_tz":420,"elapsed":191,"user":{"displayName":"SOE WUNNA","userId":"03037672760754318381"}}},"execution_count":8,"outputs":[]}]}